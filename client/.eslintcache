[{"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\index.js":"1","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\App.js":"2","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\reportWebVitals.js":"3","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\CreateTree.jsx":"4","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\TreeForm.jsx":"5","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\MapContainer.jsx":"6","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\theme.js":"7","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\NavBar.jsx":"8","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\HomePage.jsx":"9","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\MainMap.jsx":"10","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\treeNames.jsx":"11","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\genus.jsx":"12","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\Login.jsx":"13","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\Register.jsx":"14","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\SingleTreeDisplay.jsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":1969,"mtime":1612477046919,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":309,"mtime":1612454297062,"results":"20","hashOfConfig":"17"},{"size":11484,"mtime":1612460491307,"results":"21","hashOfConfig":"17"},{"size":2884,"mtime":1612220486096,"results":"22","hashOfConfig":"17"},{"size":324,"mtime":1612134960708,"results":"23","hashOfConfig":"17"},{"size":2679,"mtime":1612477590633,"results":"24","hashOfConfig":"17"},{"size":10134,"mtime":1612490400678,"results":"25","hashOfConfig":"17"},{"size":6691,"mtime":1612494437519,"results":"26","hashOfConfig":"17"},{"size":18439,"mtime":1612218681855,"results":"27","hashOfConfig":"17"},{"size":3799,"mtime":1612228011581,"results":"28","hashOfConfig":"17"},{"size":5901,"mtime":1612389937801,"results":"29","hashOfConfig":"17"},{"size":9141,"mtime":1612478264008,"results":"30","hashOfConfig":"17"},{"size":2655,"mtime":1612486466099,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"jobjn1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\index.js",[],["69","70"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\App.js",["71"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\CreateTree.jsx",["72","73"],"import React, { useState, useEffect } from 'react'\r\nimport TreeForm from '../components/TreeForm'\r\n\r\n\r\nconst CreateTree = props => {\r\n    return (\r\n        <>\r\n            <TreeForm setLoggedUser = { props.setLoggedUser } loggedUser = { props.loggedUser }/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateTree","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\TreeForm.jsx",["74","75"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport MapContainer from './MapContainer'\r\nimport \"material-design-icons/iconfont/material-icons.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Select, MenuItem, InputLabel } from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Clear from '@material-ui/icons/Clear'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {navigate} from '@reach/router'\r\nimport treeNames from '../treeNames'\r\n//Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            fontFamily: 'candara !important'\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    textfield: {\r\n        // marginLeft: '20px'\r\n    }\r\n}));\r\n\r\n//STATES\r\nconst TreeForm = props => {\r\n    console.log(props.loggedUser)\r\n    const classes = useStyles()\r\n    const [tree, setTree] = useState({\r\n        genus: '',\r\n        species: '',\r\n        commonName: '',\r\n        habitat: '',\r\n        user: props.loggedUser._id, \r\n        wholeTree: null,\r\n        leaf: null,\r\n        trunk: null,\r\n        fruit: null,\r\n        bud: null,\r\n        location: null\r\n    })\r\n    const [error, setError] = useState({})\r\n\r\n    //HANDLERS\r\n    const textChangeHandler = e => {\r\n        // console.log(e.target)\r\n        setTree({\r\n            ...tree,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const nameChangeHandler = e => {\r\n        let sciName = e.target.innerText\r\n        if (sciName) {\r\n            setTree({\r\n                ...tree,\r\n                genus: sciName.split(' ')[0],\r\n                species: sciName.split(' ')[1]\r\n            })\r\n        }\r\n\r\n    }\r\n    const imageChangeHandler = e => {\r\n        // console.log(e.target.files[0])\r\n        setTree({\r\n            ...tree,\r\n            [e.target.name]: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    const locateTree = newLocation => {\r\n        setTree({\r\n            ...tree,\r\n            location: newLocation\r\n        })\r\n    }\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        setError({})\r\n        const data = new FormData()\r\n        data.append(\"genus\", tree.genus)\r\n        data.append(\"species\", tree.species)\r\n        data.append(\"commonName\", tree.commonName)\r\n        data.append(\"habitat\", tree.habitat)\r\n        data.append(\"user\", tree.user)\r\n        for (var key in tree.location) {\r\n            data.append(key, tree.location[key]);\r\n        }\r\n        data.append(\"wholeTree\", tree.wholeTree)\r\n        data.append(\"leaf\", tree.leaf)\r\n        data.append(\"trunk\", tree.trunk)\r\n        data.append(\"fruit\", tree.fruit)\r\n        data.append(\"bud\", tree.bud)\r\n        axios.post('http://localhost:8000/api/trees/create/new', data)\r\n            .then(res => {\r\n                if (!res.data.tree) {\r\n                    setError(res.data)\r\n                    \r\n                } else {\r\n                    axios.get(`http://localhost:8000/api/users/${props.loggedUser._id}`)\r\n                        .then(res => {\r\n                            let newLoggedUser = (({ _id, firstName, lastName, trees, mostID }) => ({ _id, firstName, lastName, trees, mostID }))(res.data.user)\r\n                            // console.log(newLoggedUser)\r\n                            props.setLoggedUser(newLoggedUser)\r\n                            navigate('/trees')\r\n                        }) \r\n                        .catch(err => console.log(err))\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <form className={classes.root} encType='multipart/form-data' onSubmit={onSubmitHandler}>\r\n\r\n            <Typography variant=\"h3\" style={{ fontFamily: 'candara', fontWeight: 'bold', marginTop: '40px' }} color='textSecondary' gutterBottom>\r\n                Plot a Tree\r\n            </Typography>\r\n            {/* WHOLE FORM */}\r\n            <Grid container>\r\n                {/* LEFT SIDE (TEXT INPUTS AND FILES) */}\r\n                <Grid container xs={12} md={8}>\r\n                    <Grid item xs={12} sm={10} >\r\n                        <Autocomplete\r\n                            id=\"sName\"\r\n                            options={treeNames}\r\n                            getOptionLabel={(option) => option}\r\n                            // style={{ width: 300 }}\r\n                            onChange={nameChangeHandler}\r\n                            renderInput={(params) => <TextField {...params} required placeholder='Genus species' label=\"Scientific Name\" variant=\"outlined\"\r\n                                helperText={error.genus ? error.genus : \"\"} />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={10} >\r\n                        <TextField\r\n                            id=\"commonName\"\r\n                            name=\"commonName\"\r\n                            label=\"Common name\"\r\n                            fullWidth\r\n                            onChange={textChangeHandler}\r\n                            autoComplete=\"given-name\"\r\n                            variant='outlined'\r\n                            \r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={10}>\r\n\r\n                        <div>\r\n                            <InputLabel id=\"habitat\">Habitat:</InputLabel>\r\n                            <Select\r\n                                required\r\n                                labelId=\"habitat\"\r\n                                id=\"habitat\"\r\n                                name = 'habitat'\r\n                                value={tree.habitat}\r\n                                onClick={textChangeHandler}\r\n                                variant='outlined'\r\n                                fullWidth\r\n                            >\r\n                                <MenuItem value='Swamp, River or Lakeside'>Swamp, River or Lakeside</MenuItem>\r\n                                <MenuItem value='Typical Woods'>Typical Woods</MenuItem>\r\n                                <MenuItem value='Dry and Fire-Prone'>Dry and Fire-Prone</MenuItem>\r\n                                <MenuItem value='Arid Desert'>Arid Desert</MenuItem>\r\n                                <MenuItem value='Alpine'>Alpine</MenuItem>\r\n                                <MenuItem value='Temperate Rainforest'>Temperate Rainforest</MenuItem>\r\n                                <MenuItem value='Savanna'>Savanna</MenuItem>\r\n                                <MenuItem value='Tropical Rainforest'>Tropical Rainforest</MenuItem>\r\n                                <MenuItem value='Prarie'>Prarie</MenuItem>\r\n                            </Select>\r\n                        </div>\r\n                    </Grid>\r\n                    <Hidden smDown><Grid item sm={2}></Grid></Hidden>\r\n                    <Grid item xs={6} sm={4} lg={2}>\r\n                        <div className={classes.root}>\r\n                            <input type=\"file\" id='wholeTree' name='wholeTree' className={classes.input} accept=\"image/*\" onChange={imageChangeHandler} />\r\n                            <label htmlFor=\"wholeTree\">\r\n                                <Button variant=\"contained\" style={{ backgroundColor: 'green', color: 'white' }} component=\"span\" endIcon= {<PhotoCamera/>}>\r\n                                    Tree\r\n                            </Button>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} lg={2}>\r\n                        <div className={classes.root}>\r\n                            <input type=\"file\" id='leaf' name='leaf' className={classes.input} accept=\"image/*\" onChange={imageChangeHandler} />\r\n                            <label htmlFor=\"leaf\">\r\n                                <Button variant=\"contained\" style={{ backgroundColor: 'green', color: 'white' }} component=\"span\" endIcon= {<PhotoCamera/>}>\r\n                                    Leaf\r\n                            </Button>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} lg={2}>\r\n                        <div className={classes.root}>\r\n                            <input type=\"file\" id='trunk' name='trunk' className={classes.input} accept=\"image/*\" onChange={imageChangeHandler} />\r\n                            <label htmlFor=\"trunk\">\r\n                                <Button variant=\"contained\" style={{ backgroundColor: 'green', color: 'white' }} component=\"span\" endIcon= {<PhotoCamera/>}>\r\n                                    Trunk\r\n                            </Button>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} lg={2}>\r\n                        <div className={classes.root}>\r\n                            <input type=\"file\" id='fruit' name='fruit' className={classes.input} accept=\"image/*\" onChange={imageChangeHandler} />\r\n                            <label htmlFor=\"fruit\">\r\n                                <Button variant=\"contained\" style={{ backgroundColor: 'green', color: 'white' }} component=\"span\" endIcon= {<PhotoCamera/>}>\r\n                                    Fruit\r\n                            </Button>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4} lg={2}>\r\n                        <div className={classes.root}>\r\n                            <input type=\"file\" id='bud' name='bud' className={classes.input} multiple accept=\"image/*\" onChange={imageChangeHandler} />\r\n                            <label htmlFor=\"bud\">\r\n                                <Button variant=\"contained\" style={{ backgroundColor: 'green', color: 'white' }} component=\"span\" endIcon= {<PhotoCamera/>}>\r\n                                    Bud\r\n                            </Button>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>\r\n                    {(error.wholeTree || error.leaf || error.trunk || error.fruit || error.bud) ?\r\n                        <small style={{ color: \"red\" }}><strong>The following images were not uploaded: {error.wholeTree} {error.leaf} {error.trunk} {error.fruit} {error.bud}</strong></small> : ''}\r\n                </Grid>\r\n\r\n                {/* RIGHT SIDE (GOOGLE MAP) */}\r\n                <Grid item xs={12} sm={4}>\r\n                    <MapContainer locate={locateTree} />\r\n                    {error.location ? <small style={{ color: 'red' }}><strong>{error.location}</strong></small> : \"\"}\r\n                </Grid>\r\n            </Grid>\r\n            <input type=\"hidden\" name=\"location\" value={tree.location} />\r\n            <button style={{ border: '0px', backgroundColor: 'white' }} type='submit'><Button style={{ backgroundColor: 'green', color: 'white' }} type='submit' component=\"span\" variant='contained'>Submit</Button></button>\r\n\r\n\r\n\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TreeForm\r\n\r\n\r\n\r\n","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\MapContainer.jsx",["76","77","78"],"import React, { useEffect, useState } from 'react'\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport { Typography, IconButton, makeStyles } from '@material-ui/core'\r\nimport { MyLocation } from '@material-ui/icons'\r\nconst containerStyle = {\r\n    width: '25rem',\r\n    height: '25rem',\r\n    border: '10px solid gray',\r\n    borderStyle: 'outset'\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mapStyle: {\r\n        border: '10px solid green'\r\n    }\r\n}));\r\n\r\n\r\nfunction MapContainer(props) {\r\n    const classes = useStyles()\r\n\r\n    const [currentPosition, setCurrentPosition] = useState({});\r\n    const [locationFlag, setLocationFlag] = useState(true)\r\n    console.log('hello')\r\n    const [map, setMap] = React.useState(null)\r\n\r\n    const success = position => {\r\n        const currentPosition = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n        }\r\n        setCurrentPosition(currentPosition);\r\n    };\r\n\r\n    const { isLoaded } = useJsApiLoader({\r\n        id: 'google-map-script',\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY\r\n    })\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(success);\r\n    }, [locationFlag])\r\n\r\n\r\n\r\n    // const onLoad = React.useCallback(function callback(map) {\r\n    //     const bounds = new window.google.maps.LatLngBounds();\r\n    //     map.fitBounds(bounds);\r\n    //     setMap(map)\r\n    // }, [])\r\n\r\n    const [mark, setMark] = useState(null)\r\n\r\n    const onClickHandler = e => {\r\n        console.log(e.latLng.lat().toFixed(4), e.latLng.lng(), props.location)\r\n        setMark({\r\n            lat: e.latLng.lat(),\r\n            lng: e.latLng.lng()\r\n        })\r\n        props.locate({ lat: e.latLng.lat(), lng: e.latLng.lng() })\r\n    }\r\n    const locationHandler = e => {\r\n        setLocationFlag(!locationFlag)\r\n    }\r\n\r\n    return isLoaded ? (\r\n        <div id='mapStyle'>\r\n            <IconButton edge='start' style={{ color: 'green' }} aria-label='nature' onClick = {locationHandler}>\r\n                <MyLocation fontSize='large' />\r\n\r\n                <Typography style={{ color: 'green', marginLeft: '20px', fontFamily: 'candara' }} variant=\"h5\" noWrap>\r\n                    Find Your Location\r\n                    </Typography>\r\n            </IconButton>\r\n            <GoogleMap\r\n                mapContainerStyle={containerStyle}\r\n                center={currentPosition}\r\n                zoom={14}\r\n                // onLoad={onLoad}\r\n                onClick={onClickHandler}\r\n                \r\n            >\r\n                {\r\n                    mark ? <Marker key=\"Friends\" position={mark} /> : ''\r\n                }\r\n\r\n\r\n            </GoogleMap>\r\n            <small><i>Please click the map to identify the tree's location</i></small>\r\n        </div>\r\n    ) : <></>\r\n}\r\n\r\nexport default React.memo(MapContainer)","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\theme.js",[],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\NavBar.jsx",["79"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\HomePage.jsx",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\MainMap.jsx",["97","98","99","100","101"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\treeNames.jsx",["102"],"import React from 'react'\r\n\r\nconst treeNames = ['Abies amabilis',\r\n    'Abies balsamea',\r\n    'Abies bracteata',\r\n    'Abies concolor',\r\n    'Abies fraseri',\r\n    'Abies grandis',\r\n    'Abies lasiocarpa',\r\n    'Abies magnifica',\r\n    'Abies procera',\r\n    'Acacia berlandieri',\r\n    'Acacia choriophylla',\r\n    'Acacia farnesiana',\r\n    'Acacia greggii',\r\n    'Acacia macracantha',\r\n    'Acacia rigidula',\r\n    'Acacia roemeriana',\r\n    'Acacia tortuosa',\r\n    'Acacia wrightii',\r\n    'Acer barbatum',\r\n    'Acer circinatum',\r\n    'Acer glabrum',\r\n    'Acer grandidentatum',\r\n    'Acer leucoderme',\r\n    'Acer macrophyllum',\r\n    'Acer negundo',\r\n    'Acer nigrum',\r\n    'Acer pensylvanicum',\r\n    'Acer rubrum',\r\n    'Acer saccharinum',\r\n    'Acer saccharum',\r\n    'Acer spicatum',\r\n    'Acoelorrhaphe wrightii',\r\n    'Aesculus californica',\r\n    'Aesculus glabra',\r\n    'Aesculus octandra',\r\n    'Aesculus parviflora',\r\n    'Aesculus pavia',\r\n    'Aesculus sylvatica',\r\n    'Agave utahensis',\r\n    'Alnus maritima',\r\n    'Alnus oblongifolia',\r\n    'Alnus rhombifolia',\r\n    'Alnus rubra',\r\n    'Alnus rugosa',\r\n    'Alnus serrulata',\r\n    'Alnus sinuata',\r\n    'Alnus tenuifolia',\r\n    'Alvaradoa amorphoides',\r\n    'Amelanchier alnifolia',\r\n    'Amelanchier arborea',\r\n    'Amelanchier interior',\r\n    'Amelanchier sanguinea',\r\n    'Amelanchier utahensis',\r\n    'Amphitecna latifolia',\r\n    'Amyris balsamifera',\r\n    'Amyris elemifera',\r\n    'Annona glabra',\r\n    'Aralia spinosa',\r\n    'Arbutus arizonica',\r\n    'Arbutus menziesii',\r\n    'Arbutus texana',\r\n    'Arctostaphylos pringlei',\r\n    'Ardisia escallonioides',\r\n    'Artemisia tridentata',\r\n    'Artemisia tridentata var. tridentata',\r\n    'Artemisia tridentata var. vaseyana',\r\n    'Artemisia tridentata var. wyomingensis',\r\n    'Asimina parviflora',\r\n    'Asimina triloba',\r\n    'Avicennia germinans',\r\n    'Baccharis halimifolia',\r\n    'Betula alleghaniensis',\r\n    'Betula lenta',\r\n    'Betula nana',\r\n    'Betula nigra',\r\n    'Betula occidentalis',\r\n    'Betula papyrifera',\r\n    'Betula populifolia',\r\n    'Betula uber',\r\n    'Bourreria ovata',\r\n    'Bourreria radula',\r\n    'Bumelia celastrina',\r\n    'Bumelia lanuginosa',\r\n    'Bumelia lycioides',\r\n    'Bumelia tenax',\r\n    'Bursera fagaroides',\r\n    'Bursera microphylla',\r\n    'Bursera simaruba',\r\n    'Byrsonima lucida',\r\n    'Caesalpinia mexicana',\r\n    'Calyptranthes pallens',\r\n    'Calyptranthes zuzygium',\r\n    'Canella winterana',\r\n    'Canotia holacantha',\r\n    'Capparis cynophallophora',\r\n    'Capparis flexuosa',\r\n    'Carpinus caroliniana',\r\n    'Carya aquatica',\r\n    'Carya cordiformis',\r\n    'Carya floridana',\r\n    'Carya glabra',\r\n    'Carya illinoensis',\r\n    'Carya laciniosa',\r\n    'Carya myristicaeformis',\r\n    'Carya ovata',\r\n    'Carya pallida',\r\n    'Carya texana',\r\n    'Carya tomentosa',\r\n    'Castanea alnifolia',\r\n    'Castanea dentata',\r\n    'Castanea ozarkensis',\r\n    'Castanea pumila',\r\n    'Castanopsis chrysophylla',\r\n    'Catalpa bignonioides',\r\n    'Catalpa speciosa',\r\n    'Ceanothus arboreus',\r\n    'Ceanothus spinosus',\r\n    'Ceanothus thyrsiflorus',\r\n    'Celtis laevigata',\r\n    'Celtis lindheimeri',\r\n    'Celtis occidentalis',\r\n    'Celtis reticulata',\r\n    'Celtis tenuifolia',\r\n    'Cephalanthus occidentalis',\r\n    'Cercidium floridum',\r\n    'Cercidium macrum',\r\n    'Cercidium microphyllum',\r\n    'Cercis canadensis',\r\n    'Cercis occidentalis',\r\n    'Cercocarpus betuloides',\r\n    'Cercocarpus breviflorus',\r\n    'Cercocarpus ledifolius',\r\n    'Cercocarpus traskiae',\r\n    'Cereus giganteus',\r\n    'Cereus robinii',\r\n    'Chamaecyparis lawsoniana',\r\n    'Chamaecyparis nootkatensis',\r\n    'Chamaecyparis thyoides',\r\n    'Chilopsis linearis',\r\n    'Chionanthus virginicus',\r\n    'Chrysobalanus icaco',\r\n    'Chrysophyllum oliviforme',\r\n    'Citharexylum berlandieri',\r\n    'Citharexylum fruticosum',\r\n    'Cladrastis kentukea',\r\n    'Clethra acuminata',\r\n    'Cliftonia monophylla',\r\n    'Clusia rosea',\r\n    'Coccoloba diversifolia',\r\n    'Coccoloba uvifera',\r\n    'Coccothrinax argentata',\r\n    'Colubrina arborescens',\r\n    'Colubrina cubensis',\r\n    'Colubrina elliptica',\r\n    'Condalia globosa',\r\n    'Condalia hookeri',\r\n    'Conocarpus erectus',\r\n    'Cordia boissieri',\r\n    'Cordia sebestena',\r\n    'Cornus alternifolia',\r\n    'Cornus drummondii',\r\n    'Cornus florida',\r\n    'Cornus glabrata',\r\n    'Cornus nuttallii',\r\n    'Cornus occidentalis',\r\n    'Cornus racemosa',\r\n    'Cornus rugosa',\r\n    'Cornus sessilis',\r\n    'Cornus stolonifera',\r\n    'Cornus stricta',\r\n    'Corylus cornuta',\r\n    'Cotinus obovatus',\r\n    'Cowania mexicana',\r\n    'Crataegus chrysocarpa',\r\n    'Crataegus columbiana',\r\n    'Crataegus douglasii',\r\n    'Crataegus erythropoda',\r\n    'Crataegus saligna',\r\n    'Crataegus succulenta',\r\n    'Crataegus tracyi',\r\n    'Crossopetalum rhacoma',\r\n    'Cupania glabra',\r\n    'Cupressus arizonica',\r\n    'Cupressus bakeri',\r\n    'Cupressus goveniana',\r\n    'Cupressus guadalupensis',\r\n    'Cupressus macnabiana',\r\n    'Cupressus macrocarpa',\r\n    'Cupressus sargentii',\r\n    'Cyrilla racemiflora',\r\n    'Dalea spinosa',\r\n    'Diospyros texana',\r\n    'Diospyros virginiana',\r\n    'Dipholis salicifolia',\r\n    'Dodonaea viscosa',\r\n    'Drypetes diversifolia',\r\n    'Drypetes lateriflora',\r\n    'Ehretia anacua',\r\n    'Elliottia racemosa',\r\n    'Erythrina flabelliformis',\r\n    'Erythrina herbacea',\r\n    'Esenbeckia berlandieri',\r\n    'Eugenia axillaris',\r\n    'Eugenia confusa',\r\n    'Eugenia foetida',\r\n    'Eugenia rhombea',\r\n    'Euonymus atropurpureus',\r\n    'Euonymus occidentalis',\r\n    'Exostema caribaeum',\r\n    'Exothea paniculata',\r\n    'Eysenhardtia polystachya',\r\n    'Eysenhardtia texana',\r\n    'Fagus grandifolia',\r\n    'Ficus aurea',\r\n    'Ficus citrifolia',\r\n    'Forestiera acuminata',\r\n    'Forestiera angustifolia',\r\n    'Forestiera phillyreoides',\r\n    'Forestiera segregata',\r\n    'Franklinia alatamaha',\r\n    'Fraxinus americana',\r\n    'Fraxinus anomala',\r\n    'Fraxinus berlandieriana',\r\n    'Fraxinus caroliniana',\r\n    'Fraxinus cuspidata',\r\n    'Fraxinus dipetala',\r\n    'Fraxinus gooddingii',\r\n    'Fraxinus greggii',\r\n    'Fraxinus latifolia',\r\n    'Fraxinus nigra',\r\n    'Fraxinus papillosa',\r\n    'Fraxinus pennsylvanica',\r\n    'Fraxinus profunda',\r\n    'Fraxinus quadrangulata',\r\n    'Fraxinus texensis',\r\n    'Fraxinus velutina',\r\n    'Fremontodendron californicum',\r\n    'Fremontodendron mexicanum',\r\n    'Garrya elliptica',\r\n    'Genipa clusiifolia',\r\n    'Gleditsia aquatica',\r\n    'Gleditsia triacanthos',\r\n    'Gordonia lasianthus',\r\n    'Guaiacum angustifolium',\r\n    'Guaiacum sanctum',\r\n    'Guapira discolor',\r\n    'Guettarda elliptica',\r\n    'Guettarda scabra',\r\n    'Gyminda latifolia',\r\n    'Gymnanthes lucida',\r\n    'Gymnocladus dioicus',\r\n    'Halesia carolina',\r\n    'Halesia diptera',\r\n    'Halesia parviflora',\r\n    'Hamamelis virginiana',\r\n    'Hamelia patens',\r\n    'Helietta parvifolia',\r\n    'Hippomane mancinella',\r\n    'Holacantha emoryi',\r\n    'Hypelate trifoliata',\r\n    'Ilex ambigua',\r\n    'Ilex amelanchier',\r\n    'Ilex cassine',\r\n    'Ilex coriacea',\r\n    'Ilex decidua',\r\n    'Ilex krugiana',\r\n    'Ilex laevigata',\r\n    'Ilex longipes',\r\n    'Ilex montana',\r\n    'Ilex myrtifolia',\r\n    'Ilex opaca',\r\n    'Ilex verticillata',\r\n    'Ilex vomitoria',\r\n    'Illicium floridanum',\r\n    'Illicium parviflorum',\r\n    'Jacquinia keyensis',\r\n    'Juglans californica',\r\n    'Juglans cinerea',\r\n    'Juglans hindsii',\r\n    'Juglans major',\r\n    'Juglans microcarpa',\r\n    'Juglans nigra',\r\n    'Juniperus ashei',\r\n    'Juniperus californica',\r\n    'Juniperus communis',\r\n    'Juniperus deppeana',\r\n    'Juniperus erythrocarpa',\r\n    'Juniperus flaccida',\r\n    'Juniperus horizontalis',\r\n    'Juniperus monosperma',\r\n    'Juniperus occidentalis',\r\n    'Juniperus osteosperma',\r\n    'Juniperus pinchotii',\r\n    'Juniperus scopulorum',\r\n    'Juniperus silicicola',\r\n    'Juniperus virginiana',\r\n    'Kalmia latifolia',\r\n    'Koeberlinia spinosa',\r\n    'Krugiodendron ferreum',\r\n    'Laguncularia racemosa',\r\n    'Larix laricina',\r\n    'Larix lyallii',\r\n    'Larix occidentalis',\r\n    'Larrea divaricata',\r\n    'Leitneria floridana',\r\n    'Leucaena pulverulenta',\r\n    'Leucaena retusa',\r\n    'Libocedrus decurrens',\r\n    'Licaria triandra',\r\n    'Liquidambar styraciflua',\r\n    'Liriodendron tulipifera',\r\n    'Lithocarpus densiflorus',\r\n    'Lyonia ferruginea',\r\n    'Lyonothamnus floribundus',\r\n    'Lysiloma latisiliquum',\r\n    'Lysiloma microphylla',\r\n    'Maclura pomifera',\r\n    'Magnolia acuminata',\r\n    'Magnolia ashei',\r\n    'Magnolia fraseri',\r\n    'Magnolia grandiflora',\r\n    'Magnolia macrophylla',\r\n    'Magnolia pyramidata',\r\n    'Magnolia tripetala',\r\n    'Magnolia virginiana',\r\n    'Malus angustifolia',\r\n    'Malus coronaria',\r\n    'Malus diversifolia',\r\n    'Malus ioensis',\r\n    'Manilkara bahamensis',\r\n    'Mastichodendron foetidissimum',\r\n    'Maytenus phyllanthoides',\r\n    'Metopium toxiferum',\r\n    'Morus microphylla',\r\n    'Morus rubra',\r\n    'Myrcianthes fragrans',\r\n    'Myrica californica',\r\n    'Myrica cerifera',\r\n    'Myrica heterophylla',\r\n    'Myrica inodora',\r\n    'Myrica pensylvanica',\r\n    'Nectandra coriacea',\r\n    'Nemopanthus collinus',\r\n    'Nolina bigelovii',\r\n    'Nyssa aquatica',\r\n    'Nyssa biflora',\r\n    'Nyssa ogeche',\r\n    'Nyssa sylvatica, also see',\r\n    'Olneya tesota',\r\n    'Opuntia fulgida',\r\n    'Osmanthus americanus',\r\n    'Ostrya chisosensis',\r\n    'Ostrya knowltonii',\r\n    'Ostrya virginiana',\r\n    'Oxydendrum arboreum',\r\n    'Parkinsonia aculeata',\r\n    'Persea borbonia',\r\n    'Photinia arbutifolia',\r\n    'Picea breweriana',\r\n    'Picea chihuahuana',\r\n    'Picea engelmannii',\r\n    'Picea glauca',\r\n    'Picea mariana',\r\n    'Picea pungens',\r\n    'Picea rubens',\r\n    'Picea sitchensis',\r\n    'Picramnia pentandra',\r\n    'Pinckneya pubens',\r\n    'Pinus albicaulis',\r\n    'Pinus aristata',\r\n    'Pinus attenuata',\r\n    'Pinus ayacahuite',\r\n    'Pinus balfouriana',\r\n    'Pinus banksiana',\r\n    'Pinus caribaea',\r\n    'Pinus cembroides',\r\n    'Pinus clausa',\r\n    'Pinus contorta',\r\n    'Pinus contorta var. contorta',\r\n    'Pinus contorta var. latifolia',\r\n    'Pinus contorta var. murrayana',\r\n    'Pinus cooperi',\r\n    'Pinus coulteri',\r\n    'Pinus cubensis',\r\n    'Pinus culminicola',\r\n    'Pinus douglasiana',\r\n    'Pinus durangensis',\r\n    'Pinus echinata',\r\n    'Pinus edulis',\r\n    'Pinus elliottii',\r\n    'Pinus engelmannii',\r\n    'Pinus flexilis',\r\n    'Pinus glabra',\r\n    'Pinus greggii',\r\n    'Pinus hartwegii',\r\n    'Pinus jeffreyi',\r\n    'Pinus lambertiana',\r\n    'Pinus lawsonii',\r\n    'Pinus leiophylla var. chihuahuana',\r\n    'Pinus leiophylla, see',\r\n    'Pinus longaeva',\r\n    'Pinus lumholtzii',\r\n    'Pinus maximartinezii',\r\n    'Pinus michoacana',\r\n    'Pinus monophylla',\r\n    'Pinus montezumae',\r\n    'Pinus monticola',\r\n    'Pinus muricata',\r\n    'Pinus nelsonii',\r\n    'Pinus occidentalis',\r\n    'Pinus oocarpa',\r\n    'Pinus palustris',\r\n    'Pinus patula',\r\n    'Pinus pinceana',\r\n    'Pinus ponderosa',\r\n    'Pinus ponderosa var. benthamiana',\r\n    'Pinus ponderosa var. brachyptera',\r\n    'Pinus ponderosa var. ponderosa',\r\n    'Pinus ponderosa var. scopularum',\r\n    'Pinus ponderosa var. washoensis',\r\n    'Pinus pringlei',\r\n    'Pinus pseudostrobus',\r\n    'Pinus pungens',\r\n    'Pinus quadrifolia',\r\n    'Pinus radiata',\r\n    'Pinus resinosa',\r\n    'Pinus rigida',\r\n    'Pinus sabiniana',\r\n    'Pinus serotina',\r\n    'Pinus strobiformis',\r\n    'Pinus strobus',\r\n    'Pinus taeda',\r\n    'Pinus teocote',\r\n    'Pinus torreyana',\r\n    'Pinus tropicalis',\r\n    'Pinus virginiana',\r\n    'Pinus washoensis',\r\n    'Piscidia piscipula',\r\n    'Pisonia rotundata',\r\n    'Pistacia texana',\r\n    'Pithecellobium flexicaule',\r\n    'Pithecellobium guadalupense',\r\n    'Pithecellobium pallens',\r\n    'Pithecellobium unguis-cati',\r\n    'Planera aquatica',\r\n    'Platanus occidentalis',\r\n    'Platanus racemosa',\r\n    'Platanus wrightii',\r\n    'Populus angustifolia',\r\n    'Populus arizonica',\r\n    'Populus balsamifera',\r\n    'Populus deltoides',\r\n    'Populus fremontii',\r\n    'Populus grandidentata',\r\n    'Populus heterophylla',\r\n    'Populus hinckleyana',\r\n    'Populus tremuloides',\r\n    'Populus trichocarpa',\r\n    'Prosopis juliflora',\r\n    'Prosopis pubescens',\r\n    'Prunus alleghaniensis',\r\n    'Prunus americana',\r\n    'Prunus angustifolia',\r\n    'Prunus caroliniana',\r\n    'Prunus emarginata',\r\n    'Prunus fremontii',\r\n    'Prunus hortulana',\r\n    'Prunus ilicifolia',\r\n    'Prunus lyonii',\r\n    'Prunus mexicana',\r\n    'Prunus munsoniana',\r\n    'Prunus myrtifolia',\r\n    'Prunus nigra',\r\n    'Prunus pensylvanica',\r\n    'Prunus serotina',\r\n    'Prunus subcordata',\r\n    'Prunus umbellata',\r\n    'Prunus virginiana',\r\n    'Pseudophoenix sargentii',\r\n    'Pseudotsuga macrocarpa',\r\n    'Pseudotsuga menziesii',\r\n    'Pseudotsuga menziesii var. glauca',\r\n    'Pseudotsuga menziesii var. menziesii',\r\n    'Psidium longipes',\r\n    'Ptelea crenulata',\r\n    'Ptelea trifoliata',\r\n    'Quercus agrifolia',\r\n    'Quercus ajoensis',\r\n    'Quercus alba',\r\n    'Quercus arizonica',\r\n    'Quercus arkansana',\r\n    'Quercus bicolor',\r\n    'Quercus chapmanii',\r\n    'Quercus chrysolepis',\r\n    'Quercus coccinea',\r\n    'Quercus douglasii',\r\n    'Quercus dunnii',\r\n    'Quercus durandii',\r\n    'Quercus ellipsoidalis',\r\n    'Quercus emoryi',\r\n    'Quercus engelmannii',\r\n    'Quercus falcata',\r\n    'Quercus gambelii',\r\n    'Quercus garryana',\r\n    'Quercus georgiana',\r\n    'Quercus glaucoides',\r\n    'Quercus graciliformis',\r\n    'Quercus gravesii',\r\n    'Quercus grisea',\r\n    'Quercus havardii',\r\n    'Quercus hypoleucoides',\r\n    'Quercus ilicifolia',\r\n    'Quercus imbricaria',\r\n    'Quercus incana',\r\n    'Quercus kelloggii',\r\n    'Quercus laevis',\r\n    'Quercus laurifolia',\r\n    'Quercus lobata',\r\n    'Quercus lyrata',\r\n    'Quercus macdonaldii',\r\n    'Quercus macrocarpa',\r\n    'Quercus marilandica',\r\n    'Quercus michauxii',\r\n    'Quercus mohriana',\r\n    'Quercus muehlenbergii',\r\n    'Quercus myrtifolia',\r\n    'Quercus nigra',\r\n    'Quercus nuttallii',\r\n    'Quercus oblongifolia',\r\n    'Quercus oglethorpensis',\r\n    'Quercus palustris',\r\n    'Quercus phellos',\r\n    'Quercus prinus',\r\n    'Quercus pungens',\r\n    'Quercus rubra',\r\n    'Quercus rugosa',\r\n    'Quercus shumardii',\r\n    'Quercus stellata',\r\n    'Quercus tomentella',\r\n    'Quercus toumeyi',\r\n    'Quercus turbinella',\r\n    'Quercus velutina',\r\n    'Quercus virginiana',\r\n    'Quercus wislizeni',\r\n    'Rapanea punctata',\r\n    'Reynosia septentrionalis',\r\n    'Rhamnus betulaefolia',\r\n    'Rhamnus californica',\r\n    'Rhamnus caroliniana',\r\n    'Rhamnus crocea',\r\n    'Rhamnus purshiana',\r\n    'Rhizophora mangle',\r\n    'Rhododendron catawbiense',\r\n    'Rhododendron macrophyllum',\r\n    'Rhododendron maximum',\r\n    'Rhus choriophylla',\r\n    'Rhus copallina',\r\n    'Rhus glabra',\r\n    'Rhus integrifolia',\r\n    'Rhus kearneyi',\r\n    'Rhus lanceolata',\r\n    'Rhus laurina',\r\n    'Rhus microphylla',\r\n    'Rhus ovata',\r\n    'Rhus typhina',\r\n    'Robinia kelseyi',\r\n    'Robinia neomexicana',\r\n    'Robinia pseudoacacia',\r\n    'Robinia viscosa',\r\n    'Roystonea elata',\r\n    'Sabal mexicana',\r\n    'Sabal minor',\r\n    'Sabal palmetto',\r\n    'Salix alaxensis',\r\n    'Salix amygdaloides',\r\n    'Salix arbusculoides',\r\n    'Salix bebbiana',\r\n    'Salix bonplandiana',\r\n    'Salix caroliniana',\r\n    'Salix discolor',\r\n    'Salix exigua',\r\n    'Salix floridana',\r\n    'Salix fluviatilis',\r\n    'Salix geyeriana',\r\n    'Salix hindsiana',\r\n    'Salix hookeriana',\r\n    'Salix laevigata',\r\n    'Salix lasiandra',\r\n    'Salix lasiolepis',\r\n    'Salix lucida',\r\n    'Salix mackenzieana',\r\n    'Salix nigra',\r\n    'Salix pellita',\r\n    'Salix petiolaris',\r\n    'Salix pyrifolia',\r\n    'Salix scouleriana',\r\n    'Salix sericea',\r\n    'Salix sessilifolia',\r\n    'Salix sitchensis',\r\n    'Salix taxifolia',\r\n    'Salix tracyi',\r\n    'Sambucus callicarpa',\r\n    'Sambucus canadensis',\r\n    'Sambucus glauca',\r\n    'Sambucus melanocarpa',\r\n    'Sambucus mexicana',\r\n    'Sambucus velutina',\r\n    'Sapindus drummondii',\r\n    'Sapindus saponaria',\r\n    'Sapium biloculare',\r\n    'Sassafras albidum',\r\n    'Savia bahamensis',\r\n    'Schaefferia frutescens',\r\n    'Schoepfia chrysophylloides',\r\n    'Sequoia sempervirens',\r\n    'Sequoiadendron giganteum',\r\n    'Serenoa repens',\r\n    'Shepherdia argentea',\r\n    'Simarouba glauca',\r\n    'Solanum erianthum',\r\n    'Sophora affinis',\r\n    'Sophora secundiflora',\r\n    'Sorbus americana',\r\n    'Sorbus decora',\r\n    'Sorbus scopulina',\r\n    'Sorbus sitchensis',\r\n    'Staphylea bolanderi',\r\n    'Staphylea trifolia',\r\n    'Stewartia malacodendron',\r\n    'Stewartia ovata',\r\n    'Styrax americana',\r\n    'Styrax grandifolia',\r\n    'Styrax platanifolia',\r\n    'Suriana maritima',\r\n    'Swietenia mahagoni',\r\n    'Symplocos tinctoria',\r\n    'Taxodium distichum',\r\n    'Taxodium mucronatum',\r\n    'Taxus brevifolia',\r\n    'Taxus canadensis',\r\n    'Taxus floridana',\r\n    'Tetrazygia bicolor',\r\n    'Thrinax morrisii',\r\n    'Thrinax radiata',\r\n    'Thuja occidentalis',\r\n    'Thuja plicata',\r\n    'Tilia americana',\r\n    'Tilia caroliniana',\r\n    'Tilia heterophylla',\r\n    'Torreya californica',\r\n    'Torreya taxifolia',\r\n    'Toxicodendron vernix',\r\n    'Trema lamarckiana',\r\n    'Trema micrantha',\r\n    'Tsuga canadensis',\r\n    'Tsuga caroliniana',\r\n    'Tsuga heterophylla',\r\n    'Tsuga mertensiana',\r\n    'Ulmus alata',\r\n    'Ulmus americana',\r\n    'Ulmus crassifolia',\r\n    'Ulmus rubra',\r\n    'Ulmus serotina',\r\n    'Ulmus thomasii',\r\n    'Umbellularia californica',\r\n    'Ungnadia speciosa',\r\n    'Vaccinium arboreum',\r\n    'Vauquelinia californica',\r\n    'Vauquelinia pauciflora',\r\n    'Viburnum lentago',\r\n    'Viburnum nudum',\r\n    'Viburnum obovatum',\r\n    'Viburnum prunifolium',\r\n    'Viburnum rufidulum',\r\n    'Viburnum trilobum',\r\n    'Washingtonia filifera',\r\n    'Ximenia americana',\r\n    'Yucca aloifolia',\r\n    'Yucca brevifolia',\r\n    'Yucca carnerosana',\r\n    'Yucca elata',\r\n    'Yucca faxoniana',\r\n    'Yucca gloriosa',\r\n    'Yucca mohavensis',\r\n    'Yucca rostrata',\r\n    'Yucca schottii',\r\n    'Yucca torreyi',\r\n    'Yucca treculeana',\r\n    'Zanthoxylum americanum',\r\n    'Zanthoxylum clava-herculis',\r\n    'Zanthoxylum coriaceum',\r\n    'Zanthoxylum fagara',\r\n    'Zanthoxylum flavum',\r\n    'Zanthoxylum hirsutum'\r\n]\r\n\r\n\r\nexport default treeNames","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\genus.jsx",["103"],"import React from 'react'\r\n\r\nconst genera = [\r\n    'Abies',\r\n    'Acacia',\r\n    'Acer',\r\n    'Acoelorrhaphe',\r\n    'Aesculus',\r\n    'Agave',\r\n    'Alnus',\r\n    'Alvaradoa',\r\n    'Amelanchier',\r\n    'Amphitecna',\r\n    'Amyris',\r\n    'Annona',\r\n    'Aralia',\r\n    'Arbutus',\r\n    'Arctostaphylos',\r\n    'Ardisia',\r\n    'Artemisia',\r\n    'Asimina',\r\n    'Avicennia',\r\n    'Baccharis',\r\n    'Betula',\r\n    'Bourreria',\r\n    'Bumelia',\r\n    'Bursera',\r\n    'Byrsonima',\r\n    'Caesalpinia',\r\n    'Calyptranthes',\r\n    'Canella',\r\n    'Canotia',\r\n    'Capparis',\r\n    'Carpinus',\r\n    'Carya',\r\n    'Castanea',\r\n    'Castanopsis',\r\n    'Catalpa',\r\n    'Ceanothus',\r\n    'Celtis',\r\n    'Cephalanthus',\r\n    'Cercidium',\r\n    'Cercis',\r\n    'Cercocarpus',\r\n    'Cereus',\r\n    'Chamaecyparis',\r\n    'Chilopsis',\r\n    'Chionanthus',\r\n    'Chrysobalanus',\r\n    'Chrysophyllum',\r\n    'Citharexylum',\r\n    'Cladrastis',\r\n    'Clethra',\r\n    'Cliftonia',\r\n    'Clusia',\r\n    'Coccoloba',\r\n    'Coccothrinax',\r\n    'Colubrina',\r\n    'Condalia',\r\n    'Conocarpus',\r\n    'Cordia',\r\n    'Cornus',\r\n    'Corylus',\r\n    'Cotinus',\r\n    'Cowania',\r\n    'Crataegus',\r\n    'Crossopetalum',\r\n    'Cupania',\r\n    'Cupressus',\r\n    'Cyrilla',\r\n    'Dalea',\r\n    'Diospyros',\r\n    'Dipholis',\r\n    'Dodonaea',\r\n    'Drypetes',\r\n    'Ehretia',\r\n    'Elliottia',\r\n    'Erythrina',\r\n    'Esenbeckia',\r\n    'Eugenia',\r\n    'Euonymus',\r\n    'Exostema',\r\n    'Exothea',\r\n    'Eysenhardtia',\r\n    'Fagus',\r\n    'Ficus',\r\n    'Forestiera',\r\n    'Franklinia',\r\n    'Fraxinus',\r\n    'Fremontodendron',\r\n    'Garrya',\r\n    'Genipa',\r\n    'Gleditsia',\r\n    'Gordonia',\r\n    'Guaiacum',\r\n    'Guapira',\r\n    'Guettarda',\r\n    'Gyminda',\r\n    'Gymnanthes',\r\n    'Gymnocladus',\r\n    'Halesia',\r\n    'Hamamelis',\r\n    'Hamelia',\r\n    'Helietta',\r\n    'Hippomane',\r\n    'Holacantha',\r\n    'Hypelate',\r\n    'Ilex',\r\n    'Illicium',\r\n    'Jacquinia',\r\n    'Juglans',\r\n    'Juniperus',\r\n    'Kalmia',\r\n    'Koeberlinia',\r\n    'Krugiodendron',\r\n    'Laguncularia',\r\n    'Larix',\r\n    'Larrea',\r\n    'Leitneria',\r\n    'Leucaena',\r\n    'Libocedrus',\r\n    'Licaria',\r\n    'Liquidambar',\r\n    'Liriodendron',\r\n    'Lithocarpus',\r\n    'Lyonia',\r\n    'Lyonothamnus',\r\n    'Lysiloma',\r\n    'Maclura',\r\n    'Magnolia',\r\n    'Malus',\r\n    'Manilkara',\r\n    'Mastichodendron',\r\n    'Maytenus',\r\n    'Metopium',\r\n    'Morus',\r\n    'Myrcianthes',\r\n    'Myrica',\r\n    'Nectandra',\r\n    'Nemopanthus',\r\n    'Nolina',\r\n    'Nyssa',\r\n    'Olneya',\r\n    'Opuntia',\r\n    'Osmanthus',\r\n    'Ostrya',\r\n    'Oxydendrum',\r\n    'Parkinsonia',\r\n    'Persea',\r\n    'Photinia',\r\n    'Picea',\r\n    'Picramnia',\r\n    'Pinckneya',\r\n    'Pinus',\r\n    'Piscidia',\r\n    'Pisonia',\r\n    'Pistacia',\r\n    'Pithecellobium',\r\n    'Planera',\r\n    'Platanus',\r\n    'Populus',\r\n    'Prosopis',\r\n    'Prunus',\r\n    'Pseudophoenix',\r\n    'Pseudotsuga',\r\n    'Psidium',\r\n    'Ptelea',\r\n    'Quercus',\r\n    'Rapanea',\r\n    'Reynosia',\r\n    'Rhamnus',\r\n    'Rhizophora',\r\n    'Rhododendron',\r\n    'Rhus',\r\n    'Robinia',\r\n    'Roystonea',\r\n    'Sabal',\r\n    'Salix',\r\n    'Sambucus',\r\n    'Sapindus',\r\n    'Sapium',\r\n    'Sassafras',\r\n    'Savia',\r\n    'Schaefferia',\r\n    'Schoepfia',\r\n    'Sequoia',\r\n    'Sequoiadendron',\r\n    'Serenoa',\r\n    'Shepherdia',\r\n    'Simarouba',\r\n    'Solanum',\r\n    'Sophora',\r\n    'Sorbus',\r\n    'Staphylea',\r\n    'Stewartia',\r\n    'Styrax',\r\n    'Suriana',\r\n    'Swietenia',\r\n    'Symplocos',\r\n    'Taxodium',\r\n    'Taxus',\r\n    'Tetrazygia',\r\n    'Thrinax',\r\n    'Thuja',\r\n    'Tilia',\r\n    'Torreya',\r\n    'Toxicodendron',\r\n    'Trema',\r\n    'Tsuga',\r\n    'Ulmus',\r\n    'Umbellularia',\r\n    'Ungnadia',\r\n    'Vaccinium',\r\n    'Vauquelinia',\r\n    'Viburnum',\r\n    'Washingtonia',\r\n    'Ximenia',\r\n    'Yucca',\r\n    'Zanthoxylum'\r\n]\r\n\r\nexport default genera","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\Login.jsx",["104"],"import React, { useState, useEffect } from 'react';\r\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Paper, Box, Grid, Typography, makeStyles } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { Link, navigate } from '@reach/router'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst Copyright = () => {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link to='/'>\r\n                Casey Ferriola\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://images.all-free-download.com/images/graphiclarge/forest_513162.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',   \r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: 'silver',\r\n        // color: ''\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/logout')\r\n        .then(res => {\r\n            navigate('/')\r\n            props.setLoggedUser('')\r\n        })\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n    const [user, setUser] = useState({\r\n        email: '', \r\n        password: ''\r\n    })\r\n    const [error, setError] = useState({})\r\n\r\n    const onChangeHandler = e => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        setError({})\r\n        axios.post(`http://localhost:8000/api/users/authenticate`, user)\r\n            .then(res => {\r\n                console.log(res)\r\n                if(res.data.message){\r\n                    props.setLoggedUser(res.data.user)\r\n                    navigate('/trees')\r\n                }else {\r\n                    setError(res.data)\r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={5} md={8} className={classes.image} />\r\n            <Grid item xs={12} sm={7} md={4} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate onSubmit = {onSubmitHandler}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoFocus\r\n                            onChange={onChangeHandler}\r\n                        />\r\n                        {error.email ? <small style={{color: 'red', fontWeight: 'bold'}}>{error.email}</small>: ''}\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={onChangeHandler}\r\n                        />\r\n                        {error.password ? <small style={{color: 'red', fontWeight: 'bold'}}>{error.password}</small>: ''}<br></br>\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me?\"\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            // color=\"primary\"\r\n                            style = {{backgroundColor: '#4caf50', color: 'white'}}\r\n                            className={classes.submit}\r\n                        >\r\n                            Sign In\r\n            </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link to='/'>\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link to='/register'>\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box mt={5}>\r\n                            <Copyright />\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\Register.jsx",["105","106"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\SingleTreeDisplay.jsx",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":14,"column":18,"nodeType":"114","messageId":"115","endLine":14,"endColumn":26},{"ruleId":"112","severity":1,"message":"116","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"118","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":18},{"ruleId":"112","severity":1,"message":"119","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":13},{"ruleId":"112","severity":1,"message":"120","line":20,"column":11,"nodeType":"114","messageId":"115","endLine":20,"endColumn":18},{"ruleId":"112","severity":1,"message":"121","line":25,"column":12,"nodeType":"114","messageId":"115","endLine":25,"endColumn":15},{"ruleId":"112","severity":1,"message":"122","line":25,"column":17,"nodeType":"114","messageId":"115","endLine":25,"endColumn":23},{"ruleId":"112","severity":1,"message":"123","line":20,"column":7,"nodeType":"114","messageId":"115","endLine":20,"endColumn":15},{"ruleId":"112","severity":1,"message":"124","line":4,"column":58,"nodeType":"114","messageId":"115","endLine":4,"endColumn":67},{"ruleId":"112","severity":1,"message":"125","line":8,"column":10,"nodeType":"114","messageId":"115","endLine":8,"endColumn":39},{"ruleId":"126","severity":1,"message":"127","line":26,"column":32,"nodeType":"128","messageId":"129","endLine":26,"endColumn":34},{"ruleId":"130","severity":1,"message":"131","line":27,"column":24,"nodeType":"132","messageId":"133","endLine":27,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":27,"column":49,"nodeType":"132","messageId":"133","endLine":27,"endColumn":51},{"ruleId":"130","severity":1,"message":"131","line":37,"column":18,"nodeType":"132","messageId":"133","endLine":37,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":37,"column":41,"nodeType":"132","messageId":"133","endLine":37,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":38,"column":36,"nodeType":"128","messageId":"129","endLine":38,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":39,"column":32,"nodeType":"132","messageId":"133","endLine":39,"endColumn":34},{"ruleId":"112","severity":1,"message":"134","line":56,"column":12,"nodeType":"114","messageId":"115","endLine":56,"endColumn":22},{"ruleId":"112","severity":1,"message":"135","line":56,"column":24,"nodeType":"114","messageId":"115","endLine":56,"endColumn":37},{"ruleId":"126","severity":1,"message":"127","line":67,"column":54,"nodeType":"128","messageId":"129","endLine":67,"endColumn":56},{"ruleId":"136","severity":1,"message":"137","line":80,"column":8,"nodeType":"138","endLine":80,"endColumn":23,"suggestions":"139"},{"ruleId":"130","severity":1,"message":"131","line":93,"column":18,"nodeType":"132","messageId":"133","endLine":93,"endColumn":20},{"ruleId":"130","severity":1,"message":"131","line":128,"column":42,"nodeType":"132","messageId":"133","endLine":128,"endColumn":44},{"ruleId":"130","severity":1,"message":"131","line":141,"column":50,"nodeType":"132","messageId":"133","endLine":141,"endColumn":52},{"ruleId":"130","severity":1,"message":"131","line":151,"column":58,"nodeType":"132","messageId":"133","endLine":151,"endColumn":60},{"ruleId":"112","severity":1,"message":"121","line":53,"column":12,"nodeType":"114","messageId":"115","endLine":53,"endColumn":15},{"ruleId":"112","severity":1,"message":"122","line":53,"column":17,"nodeType":"114","messageId":"115","endLine":53,"endColumn":23},{"ruleId":"112","severity":1,"message":"140","line":54,"column":12,"nodeType":"114","messageId":"115","endLine":54,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":163,"column":66,"nodeType":"132","messageId":"133","endLine":163,"endColumn":68},{"ruleId":"141","severity":1,"message":"142","line":167,"column":53,"nodeType":"143","endLine":167,"endColumn":187},{"ruleId":"112","severity":1,"message":"144","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"144","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"145","line":64,"column":8,"nodeType":"138","endLine":64,"endColumn":10,"suggestions":"146"},{"ruleId":"112","severity":1,"message":"147","line":8,"column":7,"nodeType":"114","messageId":"115","endLine":8,"endColumn":16},{"ruleId":"136","severity":1,"message":"145","line":70,"column":8,"nodeType":"138","endLine":70,"endColumn":10,"suggestions":"148"},{"ruleId":"136","severity":1,"message":"149","line":33,"column":8,"nodeType":"138","endLine":33,"endColumn":10,"suggestions":"150"},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'navigate' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'IconButton' is defined but never used.","'Clear' is defined but never used.","'classes' is assigned a value but never used.","'map' is assigned a value but never used.","'setMap' is assigned a value but never used.","'navLinks' is assigned a value but never used.","'Container' is defined but never used.","'LocalConvenienceStoreOutlined' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'searchFlag' is assigned a value but never used.","'setSearchFlag' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.loggedUser._id'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'markerMap' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["154"],"'Copyright' is assigned a value but never used.",["155"],"React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [props.loggedUser._id, tabController]",{"range":"164","text":"165"},"Update the dependencies array to be: [props]",{"range":"166","text":"167"},{"range":"168","text":"167"},"Update the dependencies array to be: [props.id]",{"range":"169","text":"170"},[2762,2777],"[props.loggedUser._id, tabController]",[1864,1866],"[props]",[2041,2043],[1006,1008],"[props.id]"]