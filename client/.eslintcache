[{"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\index.js":"1","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\App.js":"2","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\reportWebVitals.js":"3","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\CreateTree.jsx":"4","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\TreeForm.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":179,"mtime":1611772483385,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":230,"mtime":1611772461384,"results":"10","hashOfConfig":"7"},{"size":3069,"mtime":1611802107221,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"jobjn1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\index.js",[],["25","26"],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\App.js",[],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\views\\CreateTree.jsx",["27","28","29"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport TreeForm from '../components/TreeForm'\r\n\r\nconst CreateTree = props => {\r\n    return (\r\n        <TreeForm />\r\n    )\r\n}\r\n\r\nexport default CreateTree","C:\\Users\\casey\\Desktop\\myProjects\\treeTracker\\client\\src\\components\\TreeForm.jsx",["30"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst TreeForm = props => {\r\n\r\n    const [tree, setTree] = useState({\r\n        genus: '',\r\n        species: '',\r\n        commonName: '',\r\n        habitat: '',\r\n        wholeTree: null\r\n        // leaf: null,\r\n        // trunk: null,\r\n        // fruit: null,\r\n        // bud: null\r\n    })\r\n\r\n    const textChangeHandler = e => {\r\n        setTree({\r\n            ...tree,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const nameChangeHandler = e => {\r\n        let sciName = e.target.value\r\n        setTree({\r\n            ...tree,\r\n            genus: sciName.split(' ')[0],\r\n            species: sciName.split(' ')[1]\r\n        })\r\n    }\r\n    const imageChangeHandler = e => {\r\n        console.log(e.target.files[0])\r\n        setTree({\r\n            ...tree,\r\n            [e.target.name]: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        const data = new FormData()\r\n        data.append(\"genus\", tree.genus)\r\n        data.append(\"species\", tree.species)\r\n        data.append(\"commonName\", tree.commonName)\r\n        data.append(\"habitat\", tree.habitat)\r\n        data.append(\"wholeTree\", tree.wholeTree)\r\n        axios.post('http://localhost:8000/api/trees/create/new', data)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <form encType='multipart/form-data' onSubmit={onSubmitHandler}>\r\n            <div>\r\n                <label htmlFor=\"sName\">Scientific Name</label>\r\n                <input type=\"text\" name='sName' onChange={nameChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"commonName\">Common Name</label>\r\n                <input type=\"text\" name='commonName' onChange={textChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"habitat\">Habitat</label>\r\n                <input type=\"text\" name='habitat' onChange={textChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"wholeTree\">Whole Tree</label>\r\n                <input type=\"file\" name='wholeTree' onChange={imageChangeHandler} />\r\n            </div>\r\n            {/* <div>\r\n                <label htmlFor=\"leaf\">Leaf</label>\r\n                <input type=\"file\" name='leaf' onChange={imageChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"trunk\">Trunk</label>\r\n                <input type=\"file\" name='trunk' onChange={imageChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"fruit\">Fruit</label>\r\n                <input type=\"file\" name='fruit' onChange={imageChangeHandler} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"bud\">Bud</label>\r\n                <input type=\"file\" name='bud' onChange={imageChangeHandler} />\r\n            </div> */}\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default TreeForm",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":16,"nodeType":"37","messageId":"38","endLine":1,"endColumn":24},{"ruleId":"35","severity":1,"message":"39","line":1,"column":26,"nodeType":"37","messageId":"38","endLine":1,"endColumn":35},{"ruleId":"35","severity":1,"message":"40","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":13},{"ruleId":"35","severity":1,"message":"39","line":1,"column":27,"nodeType":"37","messageId":"38","endLine":1,"endColumn":36},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]